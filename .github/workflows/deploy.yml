name: Deploy to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-central-1

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: yarn install

      - name: Build frontend (preliminary)
        working-directory: url-shortener-frontend
        run: |
          npm ci
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: aws-deployment
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy backend
        run: yarn cdk deploy --outputs-file backend-stack-outputs.json
        env:
          AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Update frontend config.js with backend API URL
        run: |
          API_URL=$(cat backend-stack-outputs.json | jq -r '.ShorturlStack.UrlShortenerApiEndpoint23405F0E' | sed 's/\/$//')
          echo "const config = { API_ENDPOINT: '${API_URL}' };" > url-shortener-frontend/src/config.js
          echo "export default config;" >> url-shortener-frontend/src/config.js

      - name: Build frontend
        working-directory: url-shortener-frontend
        run: npm run build

      - name: Deploy frontend
        run: yarn cdk deploy FrontendStack
        env:
          AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
